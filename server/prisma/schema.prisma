// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client" 
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  
}
model User {
  id        Int   @id @default(autoincrement()) 
  name      String
  phoneNumber String @unique
  email     String  @unique
  image     String?
  password  String?
  status    Status @default(Offline)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats chatUsers[]
  messages Message[]
}
model Chat {
  id        Int   @id @default(autoincrement()) 
  userId    Int
  image     String?    
  title     String @db.VarChar(50)
  messages   Message[]
  private   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users chatUsers[]
}

model Message{
  id Int @id @default(autoincrement())
  type TypeMessage
  image String? 
  content String
  createdAt DateTime @default(now())
  chatId Int
  userId Int 
  chat Chat @relation(fields: [chatId],references: [id])
  user User @relation(fields: [userId],references: [id])
}

model chatUsers{
 
  userId Int 
  chatId Int 
  role   Role  @default(guest)
  user User @relation(fields: [userId],references: [id])
  chat Chat @relation(fields: [chatId],references: [id])
  @@id([userId,chatId])
}
enum Role {
  admin 
  guest
}
enum Status {
  Online
  Offline
}
enum TypeMessage {
  file
  text
  media
}